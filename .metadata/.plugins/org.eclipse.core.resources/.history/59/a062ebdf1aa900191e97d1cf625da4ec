package dfs;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.StringTokenizer;

public class permu_test {

	static int stoi(String s) { return Integer.parseInt(s);}
	static int size;
	static int[] b;
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		size = st.countTokens();
		int[] a = new int[size];
		b = new int[size];
		for (int i = 0; i < size; i++) {
			a[i]=stoi(st.nextToken());
		}
		System.out.println(Arrays.toString(a));
		
		dfs(0);
	}

	private static void dfs(int i) {
		if(i==size) {
			for(int j=0;j<size;i++){
			    System.out.println(Arrays.toString(b));
		}
		
		
//		  if( size==i){
//		    // 모두 선택 되었음 출력하기
//		    for(int i=0;i<R;i++){
//		      printf("%d ",selected[i]);
//		    }
//		    printf("\n");
//		    return;
//		  }
//		  for(int i=1;i<=N;i++){
//		    selected[depth]=i;
//		    full(depth+1);
//		  }
		}

}
